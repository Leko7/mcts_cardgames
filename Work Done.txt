Main Classes : Card, Deck, Game,Player, GameState (all in .py files)
Total Cards = 30 (10 for each player)
Rewards are number of tricks won



First Tried Flat Monte Carlo (i.e. choosing move based on random simulations and no tree). 
Implementation in "Flat_Monte_Carlo.ipynb". Two settings considered here-
1. 2 players playing randomly and one using flat monte carlo (working well)
2. 2 players playing highest rank card and one using using flat monte carlo (decent performance)

Note: Only used 100 games for comparison for now. Planning to do more games in both settings.



Next, UCT Approach. New Class: MCTSNode()
Only one setting considered 2 players playing randomly and one using UCT. Not very good but better than random.
Depends a lot on initial distribution of cards. Only tried 100 games. Planning to experiment with more.



Further Work:

1. Increase number of games in each case.
2. Experiment with more settings in UCT (rule based vs UCT)
3. Implement Imperfect Information Setting
4. Also Experiment with basic MCTS i.e. choosing child randomly.


