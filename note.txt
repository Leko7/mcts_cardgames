Information Set Monte Carlo Tree Search

I finished implementing UCT yesterday, at first it was not very clear whether players using UCT outperformed players making random decisions.
But after changing the game to the following configuration it yielded some results :

New configuration :

12 cards in total (with V,9,10 of each color and one trump color (pique))
For standard colors, the values of winning cards are :
10:10
V:2
9:0

For pique cards, the values are :
V:20
9:14
10:10

Hence the maximum number of points possible is 44 + 3*12 = 80.
4 players, with 3 cards at the start (and hence 3 tricks to play).
The order of players in the table is 0,1,2,3.
Attack team denotes players 0 and 2.
Defense team denotes players 1 and 3.

This setup is interesting because it allows for some planning and team-play (ex: giving
a good card to your opponent), while keeping the depth of the search tree limited (the maximum number of nodes is < (3^4)*(2^4)=1 296).

Comparison setup :

One team uses random moves, the other UCT moves with 100 tree descents each time.
We run 10_000 games, where the UCT team is the defense team in half of the games, and the attack in the rest.
The UCT team obtained an average score of 46.9, vs. 33.1 for the random team, with a
standard deviation of 26.9 (scores are very dependent on the initial cards).

To sum up, this short experiment suggests that, for a 4 player/2 teams trick-based game with 12 cards, within a perfect information setup, the UCT approach is better than random on average.